name: GitHub Actions Demo
run-name: ${{ github.actor }} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö GitHub Actions üöÄ 
on: [push]

jobs:
  Explore-GitHub-Actions:  
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ ‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå ${{ github.event_name }}"
      - run: echo "üêß ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ${{ runner.os }} ‡∏ó‡∏µ‡πà‡πÇ‡∏Æ‡∏™‡∏ï‡πå‡πÇ‡∏î‡∏¢ GitHub!" 
      - run: echo "üîé ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${{ github.ref }} ‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${{ github.repository }}"
      - name: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        uses: actions/checkout@v4
      - run: echo "üí° ‡∏£‡∏µ‡∏û‡∏≠‡∏£‡∏¥‡∏ó‡∏≠‡∏£‡∏µ ${{ github.repository }} ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÇ‡∏Ñ‡∏•‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏±‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß"
      - run: echo "üñ•Ô∏è ‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å‡πÇ‡∏ü‡∏•‡∏ß‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ö‡∏ô‡∏ï‡∏±‡∏ß‡∏£‡∏±‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß" 
      - name: ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö
        run: | 
          ls ${{ github.workspace }} 

  deploy:
    needs: Explore-GitHub-Actions 
    runs-on: self-hosted   # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô self-hosted runner ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: cmd
        run: |
          
          REM ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏Å‡πà‡∏≠‡∏ô
          curl -u ${{ secrets.SONAR_TOKEN }}: http://localhost:9000/api/authentication/validate

          REM ‡πÄ‡∏û‡∏¥‡πà‡∏° path ‡∏Ç‡∏≠‡∏á local scanner
          set PATH=.sonar\scanner;%PATH%
          REM ‡πÄ‡∏£‡∏¥‡πà‡∏° scan
          dotnet-sonarscanner begin /k:"github-action" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=http://localhost:9000

          REM Build project
          dotnet build /warnaserror
          
          REM ‡∏à‡∏ö scan
          dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
          

      - name: Genarate json file
        shell: cmd
        run: | 
          curl -s -u ${{ secrets.SONAR_TOKEN }}: "http://localhost:9000/api/qualitygates/project_status?projectKey=github-action" > result.json
          findstr /C:"\"status\"" result.json
          
      - name: Read status from result.json
        shell: cmd
        run: |
          REM ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå JSON ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö projectStatus.status
          for /f "delims=" %%i in (result.json) do set "json_content=%%i"
          echo Checking projectStatus...
          
          REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ projectStatus.status ‡πÄ‡∏õ‡πá‡∏ô OK ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
          echo %json_content% | findstr /C:"\"projectStatus\":{\"status\":\"OK\"" >nul
          echo 
          if %errorlevel% neq 0 (
              echo ‚ùå Project status is not OK! Stopping workflow...
              exit /b 1
          )
          
          echo ‚úÖ Project status is OK, continuing...
            
          
          
