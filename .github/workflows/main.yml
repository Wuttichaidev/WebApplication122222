name: GitHub Actions start
on: [push] 
jobs:
  Explore-GitHub-Actions:  
    runs-on: ubuntu-latest
    steps:
      - run: echo "Start github action..."
  ZapScan:
      needs: Explore-GitHub-Actions 
      runs-on: self-hosted  

      steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Docker Desktop 
        shell: powershell
        run: Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe"

      - name: Build Docker image
        run: docker build -t aspnet6-api .

      - name: Stop old container (CMD)
        run: |
            $container = docker ps -a -q -f name=aspnet6-api-zap-container
            if ($container) {
              Write-Host "Stopping and removing container $container"
              docker stop $container
              docker rm $container
            } else {
                Write-Host "No container found, nothing to remove."
            }
      - name: Run container
        run: |
          docker run -d -p 8080:80 --name aspnet6-api-zap-container aspnet6-api
          
      - name: Create report folder
        run: mkdir -p zap-reports

      - name: Pull ZAP Docker image
        run: docker pull ghcr.io/zaproxy/zaproxy:stable
      
      - name: Run ZAP baseline scan
        run: |
          docker run --rm -v ${{ github.workspace }}/zap-reports:/zap/wrk:rw ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py -t http://host.docker.internal:8080/swagger/v1/swagger.json -r /zap/wrk/report.html




      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-reports/report.html

      - name: Stop API container
        run: |
          docker stop aspnet6-api-zap-container
          docker rm aspnet6-api-zap-container
             
  SonarQubeScan:
    needs: ZapScan
    runs-on: self-hosted
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: | 
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: cmd
        run: |
          
          #REM เรียก API ตรวจสอบ token ก่อน
          curl -u ${{ secrets.SONAR_TOKEN }}: http://localhost:9000/api/authentication/validate

          #REM เพิ่ม path ของ local scanner
          set PATH=.sonar\scanner;%PATH%
          #REM เริ่ม scan
          dotnet-sonarscanner begin /k:"github-action" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=http://localhost:9000

          #REM Build project
          dotnet build /warnaserror
         
          #REM จบ scan
          dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
          

      - name: Genarate json file
        shell: cmd
        run: | 
          curl -s -u ${{ secrets.SONAR_TOKEN }}: "http://localhost:9000/api/qualitygates/project_status?projectKey=github-action" > result.json
          findstr /C:"\"status\"" result.json
          
      - name: Read status from result.json
        shell: cmd
        run: |
          #REM อ่านไฟล์ JSON และตรวจสอบ projectStatus.status
          for /f "delims=" %%i in (result.json) do set "json_content=%%i"
          echo Checking projectStatus...
          
          #REM ตรวจสอบว่า projectStatus.status เป็น OK หรือไม่
          echo %json_content% | findstr /C:"\"projectStatus\":{\"status\":\"OK\"" >nul
          echo 
          if %errorlevel% neq 0 (
             echo ❌ Project status is not OK! Stopping workflow...
              exit /b 1
          )        
             echo ✅ Project status is OK, continuing...
  deploy:
      needs: SonarQubeScan
      runs-on: self-hosted  

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Stop old container (CMD)
        run: |
            $container = docker ps -a -q -f name=aspnet6-api-container
            if ($container) {
              Write-Host "Stopping and removing container $container"
              docker stop $container
              docker rm $container
            } else {
                Write-Host "No container found, nothing to remove."
            }
      - name: Run container
        run: |
          docker run -d -p 7070:80 --name aspnet6-api-container aspnet6-api


          
          
